<form class="{{cssClass}}" autocomplete="off">

  <header class="sheet-header">
    <div class="header-fields">
      <div class="flexcol">
        <div class="flexrow weapon-sheet-header">
          <label class="resource-label">{{localize 'castle-falkenstein.weapon.weapon'}}:</label>
          <input name="name" type="text" value="{{item.name}}" placeholder="Name" />
        </div>
        <div class="flexrow">
          <label class="resource-label">{{localize 'castle-falkenstein.weapon.effectiveRange'}}:</label>
          <input class="weapon-range" name="data.effectiveRange" type="text" value="{{data.effectiveRange}}" placeholder="" />
      </div>
      <div class="flexrow">
        <label class="resource-label">{{localize 'castle-falkenstein.weapon.ammunition'}}:</label>
        <input class="weapon-ammunition-current" name="data.ammunition" type="number" min="0" value="{{data.ammunition}}" placeholder="" />
        <span>/</span>
        <input class="weapon-ammunition-max" name="data.ammunition_max" type="number" min="0" value="{{data.ammunition_max}}" placeholder="" />
      </div>
      <div class="flexrow">
        <label class="resource-label">{{localize 'castle-falkenstein.weapon.wounds'}}:</label>
        <input class="weapon-wounds-partial" name="data.woundsPartial" type="number" min="0" value="{{data.woundsPartial}}" placeholder="" />
        <span>/</span>
        <input class="weapon-wounds-full" name="data.woundsFull" type="number" min="0" value="{{data.woundsFull}}" placeholder="" />
        <span>/</span>
        <input class="weapon-wounds-high" name="data.woundsHigh" type="number" min="0" value="{{data.woundsHigh}}" placeholder="" />
      </div>
    </div>
  </header>

  {{!-- Sheet Tab Navigation --}}
  <nav class="sheet-tabs tabs" data-group="primary">
    <a class="tab-link" data-tab="description">Description</a>
  </nav>

  {{!-- Sheet Body --}}
  <section class="sheet-body">

    {{!-- Description Tab --}}
    <div class="tab" data-group="primary" data-tab="description">
      {{!-- To render inline rolls in a TinyMCE editor, you need to pass the parent actor's (if any) roll data to the rollData prop. --}}
      {{editor content=data.description target="data.description" rollData=rollData button=true owner=owner editable=editable}}
    </div>

  </section>
</form>
